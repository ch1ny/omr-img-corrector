name: Omr-img-corrector CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  OPENCV_INCLUDE_PATHS: C:/tools/opencv/build/include
  OPENCV_LINK_LIBS: opencv_world460
  OPENCV_LINK_PATHS: C:/tools/opencv/build/x64/vc15/lib

jobs:
  Lib_Test:
    runs-on: windows-latest
    # define the rust toolchain version to use
    strategy:
      matrix:
        rust: [ stable ]
    env:
      OPENCV_INCLUDE_PATHS: C:/tools/opencv/build/include
      OPENCV_LINK_LIBS: opencv_world460
      OPENCV_LINK_PATHS: C:/tools/opencv/build/x64/vc15/lib
    steps:
      - uses: actions/checkout@v3
      # 这一个操作会自动处理 Restore 和 Save
      - id: cache-opencv-460
        uses: actions/cache@v3
        with:
          path: C:/tools/opencv
          key: ${{ runner.os }}-cache-opencv-460
      - name: Install OpenCV dependencies
        if: steps.cache-opencv-460.outputs.cache-hit != 'true'
        run: |
          choco install opencv --version 4.6.0
      - name: Test
        run: |
          cd packages/lib
          cargo test --verbose
  
  Core_Test:
    runs-on: windows-latest
    # define the rust toolchain version to use
    strategy:
      matrix:
        rust: [ stable ]
    env:
      OPENCV_INCLUDE_PATHS: C:/tools/opencv/build/include
      OPENCV_LINK_LIBS: opencv_world460
      OPENCV_LINK_PATHS: C:/tools/opencv/build/x64/vc15/lib
    steps:
      - uses: actions/checkout@v3
      # 这一个操作会自动处理 Restore 和 Save
      - id: cache-opencv-460
        uses: actions/cache@v3
        with:
          path: C:/tools/opencv
          key: ${{ runner.os }}-cache-opencv-460
      - name: Install OpenCV dependencies
        if: steps.cache-opencv-460.outputs.cache-hit != 'true'
        run: |
          choco install opencv --version 4.6.0
      - name: Test
        run: |
          cd packages/core
          cargo test --verbose

  App_Release:
    needs: [Lib_Test, Core_Test]
    runs-on: windows-latest
    # define the rust toolchain version to use
    strategy:
      matrix:
        rust: [ stable ]
    env:
      NODE_VERSION: '18.x'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      # 这一个操作会自动处理 Restore 和 Save
      - id: cache-opencv-460
        uses: actions/cache@v3
        with:
          path: C:/tools/opencv
          key: ${{ runner.os }}-cache-opencv-460
      - name: Install OpenCV dependencies
        if: steps.cache-opencv-460.outputs.cache-hit != 'true'
        run: |
          choco install opencv --version 4.6.0
      - name: Install Pnpm dependencies
        run: |
          npm i -g pnpm
          cd packages/app
          pnpm install
      - name: Build
        run: |
          cd packages/app
          pnpm run build
      - name: Build Setup
        id: build-setup
        run: |
          git submodule update --init --recursive
          cd packages/app
          pnpm run tauri build
          cd setup
          node setup.cjs
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.build-setup.outputs.release_version }}
          name: Release v${{ steps.build-setup.outputs.release_version }}
          draft: false
          prerelease: false
          files: |
            packages/app/setup/omr-corrector_x64.exe
        env:
          GITHUB_REPOSITORY: ch1ny/test-workflow
          
